{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/modules/my-dreams/models/dream.model.ts","webpack:///src/app/modules/my-dreams/my-dreams-routing.module.ts","webpack:///src/app/modules/my-dreams/my-dreams.component.ts","webpack:///src/app/modules/my-dreams/my-dreams.component.html","webpack:///src/app/modules/my-dreams/my-dreams.module.ts","webpack:///src/app/modules/my-dreams/services/my-dreams.service.ts","webpack:///src/app/modules/my-dreams/views/delete/delete.component.ts","webpack:///src/app/modules/my-dreams/views/delete/delete.component.html","webpack:///src/app/modules/my-dreams/views/dream-details/dream-details.component.ts","webpack:///src/app/modules/my-dreams/views/dream-details/dream-details.component.html","webpack:///src/app/modules/my-dreams/views/dreams-list/dreams-list.component.ts","webpack:///src/app/modules/my-dreams/views/dreams-list/dreams-list.component.html","webpack:///src/app/modules/my-dreams/views/recover/recover.component.ts","webpack:///src/app/modules/my-dreams/views/recover/recover.component.html","webpack:///src/app/shared/models/message.model.ts","webpack:///src/app/shared/services/localstorage.service.ts","webpack:///src/app/shared/services/messages.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","pathMatch","redirectTo","loadChildren","m","MyDreamsModule","AppRoutingModule","forRoot","imports","AppComponent","translate","snackBar","messagesService","setDefaultLanguage","messageManager","subscribe","message","onSendMessage","availableLanguages","navigatorLanguage","navigator","language","substr","isLanguageAvailable","some","defaultLanguage","returnDefaultLanguage","setDefaultLang","response","config","duration","panelClass","type","ERROR","get","open","openSnackBar","selector","templateUrl","styleUrls","AppModule","loader","provide","useFactory","HttpLoaderFactory","deps","declarations","providers","bootstrap","http","DreamModel","name","accomplished","Date","now","description","goals","GoalsModel","component","children","MyDreamsRoutingModule","forChild","MyDreamsComponent","MyDreamsService","dreams","setInitialData","getDreams","set","data","dream","find","observer","index","findIndex","splice","saveDreams","next","MESSAGE","complete","dreamModel","dreamAlreadyExists","newDream","push","providedIn","DeleteComponent","dialogRef","route","close","confirm","cancel","DreamDetailsComponent","service","location","router","dialog","dialogConfig","disableClose","autoFocus","afterClosed","action","removeDream","parseInt","snapshot","paramMap","getDream","goBack","console","log","checked","newStepText","length","newStep","navigate","emitMessage","forEach","goal","saveDream","addStep","openDialog","DreamsListComponent","addDream","RecoverComponent","sanitizer","generateDownloadJsonUri","theJSON","JSON","stringify","uri","bypassSecurityTrustUrl","encodeURIComponent","dataToExport","event","selectedFile","target","files","fileReader","FileReader","readAsText","onload","result","recoverDreams","parse","onerror","error","back","onFileChanged","TYPE","MessageModel","LocalStorageService","localStorage","window","key","isLocalStorageSupported","getItem","value","setItem","removeItem","MessagesService","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: 'my-dreams' },\r\n  { path: 'my-dreams', loadChildren:  (): any => import('./modules/my-dreams/my-dreams.module').then((m: any) => m.MyDreamsModule) }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport {MessagesService} from './shared/services/messages.service';\r\nimport {MessageModel, TYPE} from './shared/models/message.model';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.styl']\r\n})\r\nexport class AppComponent{\r\n  constructor(private translate: TranslateService,\r\n              private snackBar: MatSnackBar,\r\n              private messagesService: MessagesService) {\r\n    this.setDefaultLanguage();\r\n    messagesService.messageManager.subscribe(message => this.onSendMessage(message));\r\n  }\r\n\r\n  returnDefaultLanguage(): string{\r\n    const availableLanguages: string[] = ['en', 'es'];\r\n    const navigatorLanguage: string = navigator.language.substr(0, 2);\r\n    const isLanguageAvailable: boolean = availableLanguages.some(language => {\r\n      return language ===  navigatorLanguage;\r\n    });\r\n    return isLanguageAvailable ? navigatorLanguage : 'es';\r\n  }\r\n\r\n  setDefaultLanguage(): void{\r\n    const defaultLanguage: string = this.returnDefaultLanguage();\r\n    this.translate.setDefaultLang(defaultLanguage);\r\n  }\r\n\r\n  openSnackBar(response: MessageModel) {\r\n    const config = {\r\n      duration: 5000,\r\n      panelClass: response.type === TYPE.ERROR ? 'snackbar-error' : 'snackbar-message'\r\n    };\r\n    this.translate.get('general.close').subscribe((message) => {\r\n      this.snackBar.open(response.message, message, config);\r\n    });\r\n  }\r\n  onSendMessage(message: MessageModel){\r\n    this.openSnackBar(message);\r\n  }\r\n}\r\n\r\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { MyDreamsModule } from './modules/my-dreams/my-dreams.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\r\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\r\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\r\nimport {MessagesService} from './shared/services/messages.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    MyDreamsModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n  ],\r\n  providers: [MessagesService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n","export class DreamModel{\r\n  public name: string;\r\n  public accomplished: boolean;\r\n  public id: number;\r\n  public description: string;\r\n  public goals: GoalsModel[];\r\n  constructor(name: string) {\r\n    this.name = name;\r\n    this.accomplished = false;\r\n    this.id = Date.now();\r\n    this.description = '';\r\n    this.goals = [];\r\n  }\r\n}\r\nexport class GoalsModel{\r\n  public name: string;\r\n  public accomplished: boolean;\r\n  constructor(name: string) {\r\n    this.name = name;\r\n    this.accomplished = false;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DreamDetailsComponent } from './views/dream-details/dream-details.component';\r\nimport { DreamsListComponent } from './views/dreams-list/dreams-list.component';\r\nimport { MyDreamsComponent } from './my-dreams.component';\r\nimport {RecoverComponent} from './views/recover/recover.component';\r\n\r\nexport const routes: Routes = [\r\n    {\r\n      path: '',\r\n      component: MyDreamsComponent,\r\n      children: [\r\n        {\r\n          path: '',\r\n          pathMatch: 'full',\r\n          redirectTo: 'list'\r\n        },\r\n        {\r\n          path: 'details',\r\n          component: DreamDetailsComponent\r\n        },\r\n        {\r\n          path: 'list',\r\n          component: DreamsListComponent\r\n        },\r\n        {\r\n          path: 'recover',\r\n          component: RecoverComponent\r\n        }\r\n      ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MyDreamsRoutingModule{}\r\n","import { Component, OnInit } from '@angular/core';\r\n@Component({\r\n  selector: 'app-my-dreams',\r\n  templateUrl: './my-dreams.component.html',\r\n  styleUrls: ['./my-dreams.component.styl']\r\n})\r\nexport class MyDreamsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MyDreamsComponent } from './my-dreams.component';\r\nimport { MyDreamsRoutingModule } from './my-dreams-routing.module';\r\nimport { DreamDetailsComponent } from './views/dream-details/dream-details.component';\r\nimport { DreamsListComponent } from './views/dreams-list/dreams-list.component';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSnackBarModule  } from '@angular/material/snack-bar';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { RecoverComponent } from './views/recover/recover.component';\r\nimport { DeleteComponent} from './views/delete/delete.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MyDreamsComponent,\r\n    DreamDetailsComponent,\r\n    RecoverComponent,\r\n    DreamsListComponent,\r\n    DeleteComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MyDreamsRoutingModule,\r\n    MatToolbarModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    MatListModule,\r\n    MatSnackBarModule,\r\n    TranslateModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,\r\n    MatDialogModule,\r\n    MatCardModule\r\n  ]\r\n})\r\nexport class MyDreamsModule {}\r\n","import {Injectable} from '@angular/core';\r\nimport {DreamModel} from '../models/dream.model';\r\nimport {MessageModel, TYPE} from '../../../shared/models/message.model';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {Observable} from 'rxjs';\r\nimport {LocalStorageService} from '../../../shared/services/localstorage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MyDreamsService extends LocalStorageService  {\r\n  private translate: TranslateService;\r\n  dreams: DreamModel[] = [];\r\n  constructor(translate: TranslateService) {\r\n    super();\r\n    this.setInitialData();\r\n    this.translate = translate;\r\n  }\r\n  private setInitialData(): void{\r\n    const dreams = this.getDreams();\r\n    this.dreams = dreams ? dreams : [];\r\n  }\r\n  private saveDreams(): void{\r\n    this.set('dreams', this.dreams);\r\n  }\r\n  recoverDreams(data: object): void{\r\n    const dreams: DreamModel[] = data as DreamModel[];\r\n    this.set('dreams', dreams);\r\n  }\r\n  getDreams(): [DreamModel] {\r\n    return this.get('dreams');\r\n  }\r\n  dreamAlreadyExists(name: string): boolean{\r\n    return this.dreams.some(dream => dream.name === name);\r\n  }\r\n  getDream(id: number): DreamModel{\r\n    return this.dreams.find(dream => dream.id === id);\r\n  }\r\n  removeDream(id: number): Observable<MessageModel>{\r\n    return new Observable((observer) => {\r\n      const index: number = this.dreams.findIndex(dream => dream.id === id);\r\n      this.dreams.splice(index, 1);\r\n      this.saveDreams();\r\n      this.translate.get('dreams.messages.dream-deleted').subscribe((message) => {\r\n        observer.next(new MessageModel(TYPE.MESSAGE, message));\r\n        observer.complete();\r\n      });\r\n    });\r\n  }\r\n  saveDream(dreamModel: DreamModel): Observable<MessageModel>{\r\n    return new Observable((observer) => {\r\n      const index: number = this.dreams.findIndex(dream => dream.id === dreamModel.id);\r\n      this.dreams[index] = dreamModel;\r\n      this.saveDreams();\r\n      this.translate.get('dreams.messages.dream-saved').subscribe((message) => {\r\n        observer.next(new MessageModel(TYPE.MESSAGE, message));\r\n        observer.complete();\r\n      });\r\n    });\r\n  }\r\n  addDream(name: string): Observable<MessageModel> {\r\n    return new Observable((observer) => {\r\n      if (this.dreamAlreadyExists(name)){\r\n        this.translate.get('dreams.errors.dream-already-exist').subscribe((message) => {\r\n          observer.next(new MessageModel(TYPE.ERROR, message));\r\n          observer.complete();\r\n        });\r\n      }\r\n      else{\r\n        const newDream: DreamModel = new DreamModel(name);\r\n        this.dreams.push(newDream);\r\n        this.saveDreams();\r\n        this.translate.get('dreams.messages.dream-created').subscribe((message) => {\r\n          observer.next(new MessageModel(TYPE.MESSAGE, message));\r\n          observer.complete();\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {DreamModel} from '../../models/dream.model';\r\n\r\n@Component({\r\n  selector: 'app-delete',\r\n  templateUrl: './delete.component.html',\r\n  styleUrls: ['./delete.component.styl']\r\n})\r\nexport class DeleteComponent implements OnInit {\r\n  dream: DreamModel;\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {dream},\r\n              private dialogRef: MatDialogRef<DeleteComponent>,\r\n              private route: ActivatedRoute) {\r\n    this.dream = data.dream as DreamModel;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  confirm() {\r\n    this.dialogRef.close(true);\r\n  }\r\n\r\n  cancel() {\r\n    this.dialogRef.close(false);\r\n  }\r\n}\r\n","<h2 mat-dialog-title>{{ 'delete.title' | translate }}</h2>\r\n<mat-dialog-content>{{ 'delete.confirmation-message' | translate }}</mat-dialog-content>\r\n<mat-dialog-actions>\r\n  <button  class=\"btn btn-danger ml-2\" [mat-dialog-close]=\"true\" (click)=\"confirm()\">{{ 'general.accept' | translate }}</button>\r\n  <button  class=\"btn btn-dark ml-2\" [mat-dialog-close]=\"true\" (click)=\"cancel()\">{{ 'general.cancel' | translate }}</button>\r\n</mat-dialog-actions>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MyDreamsService } from '../../services/my-dreams.service';\r\nimport { DreamModel, GoalsModel } from '../../models/dream.model';\r\nimport { Location } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { MessagesService } from '../../../../shared/services/messages.service';\r\nimport { DeleteComponent } from '../delete/delete.component';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-dream-details',\r\n  templateUrl: './dream-details.component.html',\r\n  styleUrls: ['./dream-details.component.styl']\r\n})\r\nexport class DreamDetailsComponent implements OnInit {\r\n  dream: DreamModel;\r\n  newStepText: string;\r\n  constructor(private service: MyDreamsService, private route: ActivatedRoute,\r\n              private location: Location, private router: Router,\r\n              private dialog: MatDialog,\r\n              private messagesService: MessagesService) {}\r\n\r\n\r\n  openDialog() {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.disableClose = true;\r\n    dialogConfig.autoFocus = true;\r\n    dialogConfig.data = {\r\n      dream: this.dream\r\n    };\r\n    const dialogRef = this.dialog.open(DeleteComponent, dialogConfig);\r\n\r\n    dialogRef.afterClosed().subscribe(\r\n      action => {\r\n        if (action){\r\n          this.removeDream();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const id = parseInt(this.route.snapshot.paramMap.get('id'), 0);\r\n    const dream: DreamModel = this.service.getDream(id);\r\n    if (!dream){\r\n      this.goBack();\r\n    }\r\n    else{\r\n      this.dream = dream;\r\n      console.log('my current dream', this.dream);\r\n    }\r\n  }\r\n  setGoalStatus(index: number, checked: boolean): void{\r\n    this.dream.goals[index].accomplished = checked;\r\n  }\r\n  deleteStep(index: number): void{\r\n    this.dream.goals.splice(index, 1);\r\n  }\r\n  addStep(): void{\r\n    if (this.newStepText && this.newStepText.length > 3){\r\n      const newStep = new GoalsModel(this.newStepText);\r\n      this.dream.goals.push(newStep);\r\n      this.newStepText = '';\r\n      console.log(this.dream);\r\n    }\r\n  }\r\n  goBack() {\r\n    this.router.navigate(['list']);\r\n  }\r\n  removeDream(){\r\n    this.service.removeDream(this.dream.id).subscribe((response) => {\r\n      this.messagesService.emitMessage(response);\r\n      this.goBack();\r\n    });\r\n  }\r\n  saveDream() {\r\n    let accomplished = true;\r\n    this.dream.goals.forEach(goal => {\r\n      console.log(goal.accomplished);\r\n      if (!goal.accomplished){\r\n        accomplished = false;\r\n      }\r\n    });\r\n    this.dream.accomplished = accomplished;\r\n    console.log('i´m going to save this', this.dream);\r\n    this.service.saveDream(this.dream).subscribe((response) => {\r\n      this.messagesService.emitMessage(response);\r\n      this.goBack();\r\n    });\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\" class=\"text-center\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 text-left\">\r\n        <button mat-button matSuffix mat-icon-button aria-label=\"Add\" (click)=\"goBack()\" >\r\n          <mat-icon>arrow_back_ios</mat-icon>\r\n        </button>\r\n        {{ 'dreams.my-dream-details' | translate }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</mat-toolbar>\r\n<div class=\"container\">\r\n  <div class=\"row mt-1\">\r\n    <div class=\"col-12\">\r\n      <mat-card class=\"dream-card\">\r\n        <div class=\"form-group border-bottom pb-3\">\r\n          <label for=\"dreamName\">{{ 'dreams.your-dream-title' | translate }}</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"dreamName\"\r\n                 placeholder=\"{{ 'dreams.your-dream-title' | translate }}\" [(ngModel)]=\"dream.name\"/>\r\n        </div>\r\n        <mat-card-content>\r\n          <div class=\"row mt-1\">\r\n            <div class=\"col-12 form-group\">\r\n              <label for=\"description\">{{ 'general.description' | translate }}:</label>\r\n                <textarea class=\"w-100 form-control\" id=\"description\"  type=\"text\" [(ngModel)]=\"dream.description\">\r\n                </textarea>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <table class=\"table\" *ngIf=\"dream.goals && dream.goals.length > 0\">\r\n              <thead>\r\n              <tr>\r\n                <th scope=\"col\">{{ 'general.goals' | translate }}</th>\r\n                <th scope=\"col\">{{ 'general.done' | translate }}</th>\r\n                <th scope=\"col\">{{ 'general.delete' | translate }}</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr *ngFor=\"let goal of dream.goals; let i = index\">\r\n                <td>{{goal.name}}</td>\r\n                <td class=\"pt-4\">\r\n                  <mat-checkbox  #checkbox [(ngModel)]=\"goal.accomplished\" (click)=\"setGoalStatus(i, checkbox.checked)\">\r\n                  </mat-checkbox>\r\n                </td>\r\n                <td>\r\n                  <button mat-button matSuffix mat-icon-button aria-label=\"Delete\" (click)=\"deleteStep(i)\" >\r\n                    <mat-icon>delete</mat-icon>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div class=\"row mt-1\">\r\n            <div class=\"col-12\">\r\n              <mat-form-field class=\"example-form-field\">\r\n                <mat-label>{{ 'dreams.add-new-goal' | translate }}</mat-label>\r\n                <input matInput type=\"text\" [(ngModel)]=\"newStepText\" (keyup.enter)=\"addStep()\" (blur)=\"addStep()\"/>\r\n                <button mat-button *ngIf=\"newStepText && newStepText.length > 3\"\r\n                        matSuffix mat-icon-button aria-label=\"Add\" (click)=\"addStep()\" >\r\n                  <mat-icon>note_add</mat-icon>\r\n                </button>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n          <button  class=\"btn btn-dark\" (click)=\"saveDream()\">{{ 'general.save' | translate }}</button>\r\n          <button  class=\"btn btn-danger ml-2\" (click)=\"openDialog()\">{{ 'general.delete' | translate }}</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport { MyDreamsService } from '../../services/my-dreams.service';\r\nimport { DreamModel } from '../../models/dream.model';\r\nimport { Router } from '@angular/router';\r\nimport { MessagesService } from '../../../../shared/services/messages.service';\r\nimport {DomSanitizer, SafeUrl} from '@angular/platform-browser';\r\n@Component({\r\n  selector: 'app-dreams-list',\r\n  templateUrl: './dreams-list.component.html',\r\n  styleUrls: ['./dreams-list.component.styl']\r\n})\r\nexport class DreamsListComponent implements OnInit {\r\n  dreams: [DreamModel];\r\n  dream: string;\r\n  constructor(private service: MyDreamsService,\r\n              private router: Router,\r\n              private messagesService: MessagesService) {\r\n  }\r\n  getDreams(): void {\r\n    this.dreams = this.service.getDreams();\r\n    console.log('my current dreams', this.dreams);\r\n  }\r\n  ngOnInit(): void {\r\n    this.getDreams();\r\n  }\r\n  addDream(): void {\r\n    this.service.addDream(this.dream).subscribe((response) => {\r\n      console.log(response);\r\n      this.messagesService.emitMessage(response);\r\n      this.dream = '';\r\n      this.getDreams();\r\n    });\r\n  }\r\n  openDreamsDetail(dream: DreamModel): void {\r\n    console.log('i´m going to display this', dream);\r\n    this.router.navigate(['/details', {id: dream.id}]);\r\n  }\r\n\r\n\r\n}\r\n","<mat-toolbar color=\"primary\" class=\"text-center\">\r\n  <div class=\"container\">\r\n    <span class=\"text-center\">{{ 'dreams.title' | translate }}</span>\r\n  </div>\r\n</mat-toolbar>\r\n<div class=\"container\">\r\n  <div class=\"row mt-1\">\r\n    <div class=\"col-12 text-right\">\r\n      <mat-form-field class=\"example-form-field\">\r\n        <mat-label>{{ 'dreams.new-dream-text' | translate }}</mat-label>\r\n        <input matInput type=\"text\" [(ngModel)]=\"dream\" (keyup.enter)=\"addDream()\">\r\n        <button mat-button *ngIf=\"dream\" matSuffix mat-icon-button aria-label=\"Add\" (click)=\"addDream()\" >\r\n          <mat-icon>note_add</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <mat-selection-list>\r\n        <mat-list-option *ngFor=\"let dream of dreams\" [selected]=\"dream.accomplished\" (click)=\"openDreamsDetail(dream)\" class=\"border-bottom\">\r\n          {{dream.name}}\r\n        </mat-list-option>\r\n      </mat-selection-list>\r\n    </div>\r\n  </div>\r\n  <div class=\"row mt-2 pt-2\">\r\n    <div class=\"col-12 text-center\">\r\n      <a class=\"btn btn-dark ml-2\" routerLink=\"/recover\">{{ 'recover.link-text' | translate }}</a>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {DomSanitizer, SafeUrl} from '@angular/platform-browser';\r\nimport {MyDreamsService} from '../../services/my-dreams.service';\r\nimport {Location} from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-recover',\r\n  templateUrl: './recover.component.html',\r\n  styleUrls: ['./recover.component.styl']\r\n})\r\nexport class RecoverComponent implements OnInit {\r\n  dataToExport: SafeUrl;\r\n  selectedFile: File;\r\n\r\n  constructor(private sanitizer: DomSanitizer,\r\n              private location: Location,\r\n              private service: MyDreamsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.generateDownloadJsonUri();\r\n  }\r\n\r\n  generateDownloadJsonUri() {\r\n    const theJSON = JSON.stringify(this.service.getDreams());\r\n    const uri = this.sanitizer.bypassSecurityTrustUrl('data:text/json;charset=UTF-8,' + encodeURIComponent(theJSON));\r\n    this.dataToExport = uri;\r\n  }\r\n  onFileChanged(event) {\r\n    this.selectedFile = event.target.files[0];\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsText(this.selectedFile, 'UTF-8');\r\n    fileReader.onload = () => {\r\n      if (typeof fileReader.result === 'string') {\r\n        this.service.recoverDreams(JSON.parse(fileReader.result));\r\n        this.goBack();\r\n      }\r\n    };\r\n    fileReader.onerror = (error) => {\r\n      console.log(error);\r\n    };\r\n  }\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n\r\n}\r\n","<mat-toolbar color=\"primary\" class=\"text-center\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 text-left\">\r\n        <button mat-button matSuffix mat-icon-button aria-label=\"Add\" (click)=\"goBack()\" >\r\n          <mat-icon>arrow_back_ios</mat-icon>\r\n        </button>\r\n        {{ 'recover.title' | translate }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</mat-toolbar>\r\n<div class=\"container\">\r\n  <div class=\"row border-bottom pt-3 pb-3\">\r\n    <div class=\"col-12 text-center\">\r\n      <input\r\n        style=\"display: none\"\r\n        type=\"file\" (change)=\"onFileChanged($event)\"\r\n        #fileInput>\r\n      <a class=\"btn btn-dark\" href=\"#\" role=\"button\" [href]=\"dataToExport\" download=\"data.json\">{{ 'recover.export-data' | translate }}</a>\r\n      <button  class=\"btn btn-secondary ml-2\" (click)=\"fileInput.click()\">{{ 'recover.import-data' | translate }}</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","export enum TYPE {\r\n  ERROR = 'ERROR',\r\n  MESSAGE = 'MESSAGE'\r\n}\r\nexport class MessageModel {\r\n  type: TYPE;\r\n  message: string;\r\n  constructor(type: TYPE, message: string) {\r\n    this.type = type;\r\n    this.message = message;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalStorageService {\r\n  localStorage: Storage;\r\n  constructor() {\r\n    this.localStorage = window.localStorage;\r\n  }\r\n  get(key: string): any {\r\n    if (this.isLocalStorageSupported) {\r\n      return JSON.parse(this.localStorage.getItem(key));\r\n    }\r\n    return null;\r\n  }\r\n  set(key: string, value: any): boolean {\r\n    if (this.isLocalStorageSupported) {\r\n      this.localStorage.setItem(key, JSON.stringify(value));\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  remove(key: string): boolean {\r\n    if (this.isLocalStorageSupported) {\r\n      this.localStorage.removeItem(key);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  get isLocalStorageSupported(): boolean {\r\n    return !!this.localStorage;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport {MessageModel} from '../models/message.model';\r\n\r\n@Injectable()\r\nexport class MessagesService{\r\n  public messageManager = new Subject<MessageModel>();\r\n  emitMessage(message: MessageModel): void{\r\n    this.messageManager.next(message);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}