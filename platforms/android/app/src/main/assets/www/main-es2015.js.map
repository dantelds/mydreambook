{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/modules/my-dreams/models/dream.model.ts","./src/app/modules/my-dreams/my-dreams-routing.module.ts","./src/app/modules/my-dreams/my-dreams.component.ts","./src/app/modules/my-dreams/my-dreams.component.html","./src/app/modules/my-dreams/my-dreams.module.ts","./src/app/modules/my-dreams/services/my-dreams.service.ts","./src/app/modules/my-dreams/views/delete/delete.component.ts","./src/app/modules/my-dreams/views/delete/delete.component.html","./src/app/modules/my-dreams/views/dream-details/dream-details.component.ts","./src/app/modules/my-dreams/views/dream-details/dream-details.component.html","./src/app/modules/my-dreams/views/dreams-list/dreams-list.component.ts","./src/app/modules/my-dreams/views/dreams-list/dreams-list.component.html","./src/app/modules/my-dreams/views/recover/recover.component.ts","./src/app/modules/my-dreams/views/recover/recover.component.html","./src/app/shared/models/message.model.ts","./src/app/shared/services/localstorage.service.ts","./src/app/shared/services/messages.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: 'my-dreams' },\r\n  { path: 'my-dreams', loadChildren:  (): any => import('./modules/my-dreams/my-dreams.module').then((m: any) => m.MyDreamsModule) }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport {MessagesService} from './shared/services/messages.service';\r\nimport {MessageModel, TYPE} from './shared/models/message.model';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.styl']\r\n})\r\nexport class AppComponent{\r\n  constructor(private translate: TranslateService,\r\n              private snackBar: MatSnackBar,\r\n              private messagesService: MessagesService) {\r\n    this.setDefaultLanguage();\r\n    messagesService.messageManager.subscribe(message => this.onSendMessage(message));\r\n  }\r\n\r\n  returnDefaultLanguage(): string{\r\n    const availableLanguages: string[] = ['en', 'es'];\r\n    const navigatorLanguage: string = navigator.language.substr(0, 2);\r\n    const isLanguageAvailable: boolean = availableLanguages.some(language => {\r\n      return language ===  navigatorLanguage;\r\n    });\r\n    return isLanguageAvailable ? navigatorLanguage : 'es';\r\n  }\r\n\r\n  setDefaultLanguage(): void{\r\n    const defaultLanguage: string = this.returnDefaultLanguage();\r\n    this.translate.setDefaultLang(defaultLanguage);\r\n  }\r\n\r\n  openSnackBar(response: MessageModel) {\r\n    const config = {\r\n      duration: 5000,\r\n      panelClass: response.type === TYPE.ERROR ? 'snackbar-error' : 'snackbar-message'\r\n    };\r\n    this.translate.get('general.close').subscribe((message) => {\r\n      this.snackBar.open(response.message, message, config);\r\n    });\r\n  }\r\n  onSendMessage(message: MessageModel){\r\n    this.openSnackBar(message);\r\n  }\r\n}\r\n\r\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { MyDreamsModule } from './modules/my-dreams/my-dreams.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\r\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\r\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\r\nimport {MessagesService} from './shared/services/messages.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    MyDreamsModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n  ],\r\n  providers: [MessagesService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n","export class DreamModel{\r\n  public name: string;\r\n  public accomplished: boolean;\r\n  public id: number;\r\n  public description: string;\r\n  public goals: GoalsModel[];\r\n  constructor(name: string) {\r\n    this.name = name;\r\n    this.accomplished = false;\r\n    this.id = Date.now();\r\n    this.description = '';\r\n    this.goals = [];\r\n  }\r\n}\r\nexport class GoalsModel{\r\n  public name: string;\r\n  public accomplished: boolean;\r\n  constructor(name: string) {\r\n    this.name = name;\r\n    this.accomplished = false;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DreamDetailsComponent } from './views/dream-details/dream-details.component';\r\nimport { DreamsListComponent } from './views/dreams-list/dreams-list.component';\r\nimport { MyDreamsComponent } from './my-dreams.component';\r\nimport {RecoverComponent} from './views/recover/recover.component';\r\n\r\nexport const routes: Routes = [\r\n    {\r\n      path: '',\r\n      component: MyDreamsComponent,\r\n      children: [\r\n        {\r\n          path: '',\r\n          pathMatch: 'full',\r\n          redirectTo: 'list'\r\n        },\r\n        {\r\n          path: 'details',\r\n          component: DreamDetailsComponent\r\n        },\r\n        {\r\n          path: 'list',\r\n          component: DreamsListComponent\r\n        },\r\n        {\r\n          path: 'recover',\r\n          component: RecoverComponent\r\n        }\r\n      ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MyDreamsRoutingModule{}\r\n","import { Component, OnInit } from '@angular/core';\r\n@Component({\r\n  selector: 'app-my-dreams',\r\n  templateUrl: './my-dreams.component.html',\r\n  styleUrls: ['./my-dreams.component.styl']\r\n})\r\nexport class MyDreamsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MyDreamsComponent } from './my-dreams.component';\r\nimport { MyDreamsRoutingModule } from './my-dreams-routing.module';\r\nimport { DreamDetailsComponent } from './views/dream-details/dream-details.component';\r\nimport { DreamsListComponent } from './views/dreams-list/dreams-list.component';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSnackBarModule  } from '@angular/material/snack-bar';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { RecoverComponent } from './views/recover/recover.component';\r\nimport { DeleteComponent} from './views/delete/delete.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MyDreamsComponent,\r\n    DreamDetailsComponent,\r\n    RecoverComponent,\r\n    DreamsListComponent,\r\n    DeleteComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MyDreamsRoutingModule,\r\n    MatToolbarModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    MatListModule,\r\n    MatSnackBarModule,\r\n    TranslateModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,\r\n    MatDialogModule,\r\n    MatCardModule\r\n  ]\r\n})\r\nexport class MyDreamsModule {}\r\n","import {Injectable} from '@angular/core';\r\nimport {DreamModel} from '../models/dream.model';\r\nimport {MessageModel, TYPE} from '../../../shared/models/message.model';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {Observable} from 'rxjs';\r\nimport {LocalStorageService} from '../../../shared/services/localstorage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MyDreamsService extends LocalStorageService  {\r\n  private translate: TranslateService;\r\n  dreams: DreamModel[] = [];\r\n  constructor(translate: TranslateService) {\r\n    super();\r\n    this.setInitialData();\r\n    this.translate = translate;\r\n  }\r\n  private setInitialData(): void{\r\n    const dreams = this.getDreams();\r\n    this.dreams = dreams ? dreams : [];\r\n  }\r\n  private saveDreams(): void{\r\n    this.set('dreams', this.dreams);\r\n  }\r\n  recoverDreams(data: object): void{\r\n    const dreams: DreamModel[] = data as DreamModel[];\r\n    this.set('dreams', dreams);\r\n  }\r\n  getDreams(): [DreamModel] {\r\n    return this.get('dreams');\r\n  }\r\n  dreamAlreadyExists(name: string): boolean{\r\n    return this.dreams.some(dream => dream.name === name);\r\n  }\r\n  getDream(id: number): DreamModel{\r\n    return this.dreams.find(dream => dream.id === id);\r\n  }\r\n  removeDream(id: number): Observable<MessageModel>{\r\n    return new Observable((observer) => {\r\n      const index: number = this.dreams.findIndex(dream => dream.id === id);\r\n      this.dreams.splice(index, 1);\r\n      this.saveDreams();\r\n      this.translate.get('dreams.messages.dream-deleted').subscribe((message) => {\r\n        observer.next(new MessageModel(TYPE.MESSAGE, message));\r\n        observer.complete();\r\n      });\r\n    });\r\n  }\r\n  saveDream(dreamModel: DreamModel): Observable<MessageModel>{\r\n    return new Observable((observer) => {\r\n      const index: number = this.dreams.findIndex(dream => dream.id === dreamModel.id);\r\n      this.dreams[index] = dreamModel;\r\n      this.saveDreams();\r\n      this.translate.get('dreams.messages.dream-saved').subscribe((message) => {\r\n        observer.next(new MessageModel(TYPE.MESSAGE, message));\r\n        observer.complete();\r\n      });\r\n    });\r\n  }\r\n  addDream(name: string): Observable<MessageModel> {\r\n    return new Observable((observer) => {\r\n      if (this.dreamAlreadyExists(name)){\r\n        this.translate.get('dreams.errors.dream-already-exist').subscribe((message) => {\r\n          observer.next(new MessageModel(TYPE.ERROR, message));\r\n          observer.complete();\r\n        });\r\n      }\r\n      else{\r\n        const newDream: DreamModel = new DreamModel(name);\r\n        this.dreams.push(newDream);\r\n        this.saveDreams();\r\n        this.translate.get('dreams.messages.dream-created').subscribe((message) => {\r\n          observer.next(new MessageModel(TYPE.MESSAGE, message));\r\n          observer.complete();\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {DreamModel} from '../../models/dream.model';\r\n\r\n@Component({\r\n  selector: 'app-delete',\r\n  templateUrl: './delete.component.html',\r\n  styleUrls: ['./delete.component.styl']\r\n})\r\nexport class DeleteComponent implements OnInit {\r\n  dream: DreamModel;\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {dream},\r\n              private dialogRef: MatDialogRef<DeleteComponent>,\r\n              private route: ActivatedRoute) {\r\n    this.dream = data.dream as DreamModel;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  confirm() {\r\n    this.dialogRef.close(true);\r\n  }\r\n\r\n  cancel() {\r\n    this.dialogRef.close(false);\r\n  }\r\n}\r\n","<h2 mat-dialog-title>{{ 'delete.title' | translate }}</h2>\r\n<mat-dialog-content>{{ 'delete.confirmation-message' | translate }}</mat-dialog-content>\r\n<mat-dialog-actions>\r\n  <button  class=\"btn btn-danger ml-2\" [mat-dialog-close]=\"true\" (click)=\"confirm()\">{{ 'general.accept' | translate }}</button>\r\n  <button  class=\"btn btn-dark ml-2\" [mat-dialog-close]=\"true\" (click)=\"cancel()\">{{ 'general.cancel' | translate }}</button>\r\n</mat-dialog-actions>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MyDreamsService } from '../../services/my-dreams.service';\r\nimport { DreamModel, GoalsModel } from '../../models/dream.model';\r\nimport { Location } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { MessagesService } from '../../../../shared/services/messages.service';\r\nimport { DeleteComponent } from '../delete/delete.component';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-dream-details',\r\n  templateUrl: './dream-details.component.html',\r\n  styleUrls: ['./dream-details.component.styl']\r\n})\r\nexport class DreamDetailsComponent implements OnInit {\r\n  dream: DreamModel;\r\n  newStepText: string;\r\n  constructor(private service: MyDreamsService, private route: ActivatedRoute,\r\n              private location: Location, private router: Router,\r\n              private dialog: MatDialog,\r\n              private messagesService: MessagesService) {}\r\n\r\n\r\n  openDialog() {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.disableClose = true;\r\n    dialogConfig.autoFocus = true;\r\n    dialogConfig.data = {\r\n      dream: this.dream\r\n    };\r\n    const dialogRef = this.dialog.open(DeleteComponent, dialogConfig);\r\n\r\n    dialogRef.afterClosed().subscribe(\r\n      action => {\r\n        if (action){\r\n          this.removeDream();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const id = parseInt(this.route.snapshot.paramMap.get('id'), 0);\r\n    const dream: DreamModel = this.service.getDream(id);\r\n    if (!dream){\r\n      this.goBack();\r\n    }\r\n    else{\r\n      this.dream = dream;\r\n      console.log('my current dream', this.dream);\r\n    }\r\n  }\r\n  setGoalStatus(index: number, checked: boolean): void{\r\n    this.dream.goals[index].accomplished = checked;\r\n  }\r\n  deleteStep(index: number): void{\r\n    this.dream.goals.splice(index, 1);\r\n  }\r\n  addStep(): void{\r\n    if (this.newStepText && this.newStepText.length > 3){\r\n      const newStep = new GoalsModel(this.newStepText);\r\n      this.dream.goals.push(newStep);\r\n      this.newStepText = '';\r\n      console.log(this.dream);\r\n    }\r\n  }\r\n  goBack() {\r\n    this.router.navigate(['list']);\r\n  }\r\n  removeDream(){\r\n    this.service.removeDream(this.dream.id).subscribe((response) => {\r\n      this.messagesService.emitMessage(response);\r\n      this.goBack();\r\n    });\r\n  }\r\n  saveDream() {\r\n    let accomplished = true;\r\n    this.dream.goals.forEach(goal => {\r\n      console.log(goal.accomplished);\r\n      if (!goal.accomplished){\r\n        accomplished = false;\r\n      }\r\n    });\r\n    this.dream.accomplished = accomplished;\r\n    console.log('i´m going to save this', this.dream);\r\n    this.service.saveDream(this.dream).subscribe((response) => {\r\n      this.messagesService.emitMessage(response);\r\n      this.goBack();\r\n    });\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\" class=\"text-center\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 text-left\">\r\n        <button mat-button matSuffix mat-icon-button aria-label=\"Add\" (click)=\"goBack()\" >\r\n          <mat-icon>arrow_back_ios</mat-icon>\r\n        </button>\r\n        {{ 'dreams.my-dream-details' | translate }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</mat-toolbar>\r\n<div class=\"container\">\r\n  <div class=\"row mt-1\">\r\n    <div class=\"col-12\">\r\n      <mat-card class=\"dream-card\">\r\n        <div class=\"form-group border-bottom pb-3\">\r\n          <label for=\"dreamName\">{{ 'dreams.your-dream-title' | translate }}</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"dreamName\"\r\n                 placeholder=\"{{ 'dreams.your-dream-title' | translate }}\" [(ngModel)]=\"dream.name\"/>\r\n        </div>\r\n        <mat-card-content>\r\n          <div class=\"row mt-1\">\r\n            <div class=\"col-12 form-group\">\r\n              <label for=\"description\">{{ 'general.description' | translate }}:</label>\r\n                <textarea class=\"w-100 form-control\" id=\"description\"  type=\"text\" [(ngModel)]=\"dream.description\">\r\n                </textarea>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <table class=\"table\" *ngIf=\"dream.goals && dream.goals.length > 0\">\r\n              <thead>\r\n              <tr>\r\n                <th scope=\"col\">{{ 'general.goals' | translate }}</th>\r\n                <th scope=\"col\">{{ 'general.done' | translate }}</th>\r\n                <th scope=\"col\">{{ 'general.delete' | translate }}</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr *ngFor=\"let goal of dream.goals; let i = index\">\r\n                <td>{{goal.name}}</td>\r\n                <td class=\"pt-4\">\r\n                  <mat-checkbox  #checkbox [(ngModel)]=\"goal.accomplished\" (click)=\"setGoalStatus(i, checkbox.checked)\">\r\n                  </mat-checkbox>\r\n                </td>\r\n                <td>\r\n                  <button mat-button matSuffix mat-icon-button aria-label=\"Delete\" (click)=\"deleteStep(i)\" >\r\n                    <mat-icon>delete</mat-icon>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div class=\"row mt-1\">\r\n            <div class=\"col-12\">\r\n              <mat-form-field class=\"example-form-field\">\r\n                <mat-label>{{ 'dreams.add-new-goal' | translate }}</mat-label>\r\n                <input matInput type=\"text\" [(ngModel)]=\"newStepText\" (keyup.enter)=\"addStep()\" (blur)=\"addStep()\"/>\r\n                <button mat-button *ngIf=\"newStepText && newStepText.length > 3\"\r\n                        matSuffix mat-icon-button aria-label=\"Add\" (click)=\"addStep()\" >\r\n                  <mat-icon>note_add</mat-icon>\r\n                </button>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n          <button  class=\"btn btn-dark\" (click)=\"saveDream()\">{{ 'general.save' | translate }}</button>\r\n          <button  class=\"btn btn-danger ml-2\" (click)=\"openDialog()\">{{ 'general.delete' | translate }}</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport { MyDreamsService } from '../../services/my-dreams.service';\r\nimport { DreamModel } from '../../models/dream.model';\r\nimport { Router } from '@angular/router';\r\nimport { MessagesService } from '../../../../shared/services/messages.service';\r\nimport {DomSanitizer, SafeUrl} from '@angular/platform-browser';\r\n@Component({\r\n  selector: 'app-dreams-list',\r\n  templateUrl: './dreams-list.component.html',\r\n  styleUrls: ['./dreams-list.component.styl']\r\n})\r\nexport class DreamsListComponent implements OnInit {\r\n  dreams: [DreamModel];\r\n  dream: string;\r\n  constructor(private service: MyDreamsService,\r\n              private router: Router,\r\n              private messagesService: MessagesService) {\r\n  }\r\n  getDreams(): void {\r\n    this.dreams = this.service.getDreams();\r\n    console.log('my current dreams', this.dreams);\r\n  }\r\n  ngOnInit(): void {\r\n    this.getDreams();\r\n  }\r\n  addDream(): void {\r\n    this.service.addDream(this.dream).subscribe((response) => {\r\n      console.log(response);\r\n      this.messagesService.emitMessage(response);\r\n      this.dream = '';\r\n      this.getDreams();\r\n    });\r\n  }\r\n  openDreamsDetail(dream: DreamModel): void {\r\n    console.log('i´m going to display this', dream);\r\n    this.router.navigate(['/details', {id: dream.id}]);\r\n  }\r\n\r\n\r\n}\r\n","<mat-toolbar color=\"primary\" class=\"text-center\">\r\n  <div class=\"container\">\r\n    <span class=\"text-center\">{{ 'dreams.title' | translate }}</span>\r\n  </div>\r\n</mat-toolbar>\r\n<div class=\"container\">\r\n  <div class=\"row mt-1\">\r\n    <div class=\"col-12 text-right\">\r\n      <mat-form-field class=\"example-form-field\">\r\n        <mat-label>{{ 'dreams.new-dream-text' | translate }}</mat-label>\r\n        <input matInput type=\"text\" [(ngModel)]=\"dream\" (keyup.enter)=\"addDream()\">\r\n        <button mat-button *ngIf=\"dream\" matSuffix mat-icon-button aria-label=\"Add\" (click)=\"addDream()\" >\r\n          <mat-icon>note_add</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <mat-selection-list>\r\n        <mat-list-option *ngFor=\"let dream of dreams\" [selected]=\"dream.accomplished\" (click)=\"openDreamsDetail(dream)\" class=\"border-bottom\">\r\n          {{dream.name}}\r\n        </mat-list-option>\r\n      </mat-selection-list>\r\n    </div>\r\n  </div>\r\n  <div class=\"row mt-2 pt-2\">\r\n    <div class=\"col-12 text-center\">\r\n      <a class=\"btn btn-dark ml-2\" routerLink=\"/recover\">{{ 'recover.link-text' | translate }}</a>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {DomSanitizer, SafeUrl} from '@angular/platform-browser';\r\nimport {MyDreamsService} from '../../services/my-dreams.service';\r\nimport {Location} from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-recover',\r\n  templateUrl: './recover.component.html',\r\n  styleUrls: ['./recover.component.styl']\r\n})\r\nexport class RecoverComponent implements OnInit {\r\n  dataToExport: SafeUrl;\r\n  selectedFile: File;\r\n\r\n  constructor(private sanitizer: DomSanitizer,\r\n              private location: Location,\r\n              private service: MyDreamsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.generateDownloadJsonUri();\r\n  }\r\n\r\n  generateDownloadJsonUri() {\r\n    const theJSON = JSON.stringify(this.service.getDreams());\r\n    const uri = this.sanitizer.bypassSecurityTrustUrl('data:text/json;charset=UTF-8,' + encodeURIComponent(theJSON));\r\n    this.dataToExport = uri;\r\n  }\r\n  onFileChanged(event) {\r\n    this.selectedFile = event.target.files[0];\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsText(this.selectedFile, 'UTF-8');\r\n    fileReader.onload = () => {\r\n      if (typeof fileReader.result === 'string') {\r\n        this.service.recoverDreams(JSON.parse(fileReader.result));\r\n        this.goBack();\r\n      }\r\n    };\r\n    fileReader.onerror = (error) => {\r\n      console.log(error);\r\n    };\r\n  }\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n\r\n}\r\n","<mat-toolbar color=\"primary\" class=\"text-center\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 text-left\">\r\n        <button mat-button matSuffix mat-icon-button aria-label=\"Add\" (click)=\"goBack()\" >\r\n          <mat-icon>arrow_back_ios</mat-icon>\r\n        </button>\r\n        {{ 'recover.title' | translate }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</mat-toolbar>\r\n<div class=\"container\">\r\n  <div class=\"row border-bottom pt-3 pb-3\">\r\n    <div class=\"col-12 text-center\">\r\n      <input\r\n        style=\"display: none\"\r\n        type=\"file\" (change)=\"onFileChanged($event)\"\r\n        #fileInput>\r\n      <a class=\"btn btn-dark\" href=\"#\" role=\"button\" [href]=\"dataToExport\" download=\"data.json\">{{ 'recover.export-data' | translate }}</a>\r\n      <button  class=\"btn btn-secondary ml-2\" (click)=\"fileInput.click()\">{{ 'recover.import-data' | translate }}</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","export enum TYPE {\r\n  ERROR = 'ERROR',\r\n  MESSAGE = 'MESSAGE'\r\n}\r\nexport class MessageModel {\r\n  type: TYPE;\r\n  message: string;\r\n  constructor(type: TYPE, message: string) {\r\n    this.type = type;\r\n    this.message = message;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalStorageService {\r\n  localStorage: Storage;\r\n  constructor() {\r\n    this.localStorage = window.localStorage;\r\n  }\r\n  get(key: string): any {\r\n    if (this.isLocalStorageSupported) {\r\n      return JSON.parse(this.localStorage.getItem(key));\r\n    }\r\n    return null;\r\n  }\r\n  set(key: string, value: any): boolean {\r\n    if (this.isLocalStorageSupported) {\r\n      this.localStorage.setItem(key, JSON.stringify(value));\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  remove(key: string): boolean {\r\n    if (this.isLocalStorageSupported) {\r\n      this.localStorage.removeItem(key);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  get isLocalStorageSupported(): boolean {\r\n    return !!this.localStorage;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport {MessageModel} from '../models/message.model';\r\n\r\n@Injectable()\r\nexport class MessagesService{\r\n  public messageManager = new Subject<MessageModel>();\r\n  emitMessage(message: MessageModel): void{\r\n    this.messageManager.next(message);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}